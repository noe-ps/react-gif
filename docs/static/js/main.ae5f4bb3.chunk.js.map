{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifs.js","components/GifGridItem.jsx","components/GifGrid.jsx","hooks/useFetchGifs.js","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","style","textAlign","ReactDOM","render","document","getElementById"],"mappings":"2LAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAe5C,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAO,IACzBR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,QAiBfG,YAAY,iB,+BCxBdC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdC,EADc,iDACkCC,UAAUH,GAD5C,+DAEDI,MAAMF,GAFL,cAEdG,EAFc,gBAGGA,EAAKC,OAHR,uBAGZC,EAHY,EAGZA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATtB,kBAYbM,GAZa,4CAAH,sDCERO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACjC,OACI,qBAAKc,UAAU,yCAAf,SACI,qBAAKC,IAAKf,EAAKgB,IAAKN,OCAnBO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFX,SAAEA,GAAc,IAAD,EAEbf,mBAAS,CAC/BsB,KAAK,GACLa,SAAS,IAJ0B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAiBvC,OAVAC,qBAAU,WACNxB,EAAQC,GACPwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGlB,CAACpB,IAEGqB,EDb0BK,CAAc1B,GAAlCa,EAFsB,EAE3BN,KAAaa,EAFc,EAEdA,QAGrB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAClDoB,GAAW,mBAAGJ,UAAU,wCAAb,wBAEZ,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEqBtBgB,EAnCM,WAAM,MAGa1C,mBAAS,CAAC,eAHvB,mBAGhB2C,EAHgB,KAGJ5C,EAHI,KASvB,OACI,sBAAK6C,MAAO,CACRC,UAAU,UADd,UAGA,gDACA,cAAC,EAAD,CAAa9C,cAAeA,IAC5B,uBAUI4C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAUA,GADHA,U,MC3B3B+B,IAASC,OACP,mCACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ae5f4bb3.chunk.js","sourcesContent":["import React , {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({setCategories}) => {\n    const [inputValue, setInputValue] = useState(\"\");\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (inputValue.trim().length>2){\n            setCategories(cats => [inputValue, ...cats] )\n            setInputValue(\"\")\n        }\n\n    }\n    return (\n        <form onSubmit={handleSubmit}>\n            <input \n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n                placeholder=\"Buscar...\"\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes ={\n    setCategories: PropTypes.func.isRequired\n}"," export const getGifs = async( category )=>{\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=17&api_key=43f0IfqAmtLdyogPN5O0QqqrvjgxOusW`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map( img =>{\n        return{\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    return(gifs)\n}","import React from 'react'\n\nexport const GifGridItem = ( {title, url} ) => {\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title} />\n        </div>\n    )\n}\n","import React from 'react'\nimport { getGifs } from '../helpers/getGifs';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n\n    const { data:images, loading } = useFetchGifs( category );\n\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n            {loading && <p className=\"card animate__animated animate__flash\">Loading...</p>}\n\n            <div className='card-grid'>\n                 {\n                    images.map(img => (\n                        <GifGridItem \n                            key={img.id}\n                            {...img}\n                        />\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = ( category ) =>{\n\n    const [state, setState] = useState({\n        data:[],\n        loading: true\n    });\n\n    useEffect(() => {\n        getGifs(category )\n        .then(imgs =>{\n            setState({\n                data: imgs,\n                loading: false\n            });\n        })\n    }, [category])\n\n    return state; //{ data:[], loading: true};\n}","import {useState} from 'react'\nimport { AddCategory } from './components/AddCategory'\nimport { GifGrid } from './components/GifGrid'\n\n\nconst GifExpertApp = () => {\n\n   // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\n    const [categories, setCategories] = useState(['Evangelion'])\n\n    // const handleAdd = ()=>{\n    //     setCategories([...categories, 'HunterXHunter']) //operador spread\n    // }\n\n    return (\n        <div style={{\n            textAlign:\"center\"\n            }}>\n        <h2>Gif Expert App</h2>  \n        <AddCategory setCategories={setCategories}/>\n        <hr />\n\n\n        {/* {\n            categories.map( category => {\n                return <li key={category}>{category}</li> //No se recomienda usar index es mejor usar un id\n            })\n        } */}\n\n{\n            categories.map( category =>( \n                <GifGrid \n                    key = {category}\n                    category={category}\n                />))\n        }\n        </div>\n    )\n}\n\nexport default GifExpertApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <>\n    <GifExpertApp />\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}